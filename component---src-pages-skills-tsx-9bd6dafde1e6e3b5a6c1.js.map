{"version":3,"sources":["webpack:///./src/components/molecules/Skills/skill-data.tsx","webpack:///./src/components/molecules/Skills/card.tsx","webpack:///./src/components/molecules/Skills/skills.mdx","webpack:///./src/components/molecules/Skills/skill-cards.tsx","webpack:///./src/pages/skills.tsx"],"names":["data","python","icon","title","cpp","react","vuejs","r","rust","docker","ruby","elasticsearch","aws","Card","className","id","children","useInView","rootMargin","ref","inView","css","margin","sizes","display","opacity","marginLeft","alignItems","animation","BottomIn","color","colors","black","alignContent","marginTop","blue","fontWeight","typography","fontWeights","bold","background","LeftIn","mq","StyledCard","layoutProps","_frontmatter","MDXContent","components","props","mdxType","parentName","isMDXComponent","SkillCards","StyledSkillCards","Skills","symbol","StyledSkills","baseStyle","path","pathname"],"mappings":"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","file":"component---src-pages-skills-tsx-9bd6dafde1e6e3b5a6c1.js","sourcesContent":["import * as React from 'react';\nimport { \n  SiDocker, SiPython, SiReact, SiRust, \n  SiAmazonaws,SiElasticsearch \n} from 'react-icons/si';\nimport { FaVuejs } from 'react-icons/fa';\nimport { DiRuby } from 'react-icons/di';\n\ntype Data = {\n  [key: string]: {\n    icon: JSX.Element | null;\n    title: string;\n  };\n};\n\nconst data: Data = {\n  python: { icon: <SiPython />, title: 'Python' },\n  cpp: { icon: null, title: 'C++' },\n  react: { icon: <SiReact />, title: 'React 🔰' },\n  vuejs: { icon: <FaVuejs />, title: 'Vue.js'},\n  r: { icon: null, title: 'R' },\n  rust: { icon: <SiRust />, title: 'Rust 🔰' },\n  docker: { icon: <SiDocker />, title: 'Docker' },\n  ruby: {icon: <DiRuby />, title: 'Ruby'},\n  elasticsearch: {icon:<SiElasticsearch />, title:'Elasticsearch'},\n  aws: {icon: <SiAmazonaws />, title: 'AWS 🔰'}\n};\n\nexport default data;\n","import React from 'react';\n\nimport styled from '@emotion/styled';\n\nimport { useInView } from 'react-intersection-observer';\n\nimport data from './skill-data';\n\nimport { sizes, colors, mq, typography, } from '../../../theme';\nimport { BottomIn, RightIn, LeftIn } from '../../../keyframes';\nimport { SubTitle} from '../../atoms/SubTitle'\ntype Props = {\n    id: string;\n};\n\nconst Card: React.FCX<Props> = ({ className, id, children }) => {\n    const { icon, title } = data[id];\n    const [ref, inView] = useInView({\n        rootMargin: '-50px 0px',\n    });\n    return (\n        <div className={className} id={id} ref={ref}\n            css={{\n                margin: sizes[4],\n                display: 'flex',\n                opacity: inView ? 1 : 0,\n                '& .SkillStackItemContent': {\n                marginLeft: sizes[2],\n                alignItems: 'center',\n                animation: inView\n                ? `${BottomIn} 0.5s ease-out`:0,\n                '& h2': {\n                    color: colors.black,\n                    alignItems: 'center',\n                    marginLeft: sizes[1],\n                    alignContent:'center',\n                },\n                '& h4':{\n                    \n                },\n                '& p': {\n                    color: colors.black,\n                    marginTop: sizes[8],\n                    marginLeft: sizes[0],\n                },\n                '& a': {\n                    color: colors.blue,\n                    fontWeight: typography.fontWeights.bold,\n                    marginTop: sizes[3],\n                    marginLeft: sizes[0],\n                    background: `linear-gradient(transparent 50%, #CCCC66 50%)`,    \n                },\n                '& i':{\n                    animation: inView ? `${LeftIn} 0.5s ease-out`:0,\n                    alignItems:'center',\n                },\n                [mq[1]]: {\n                    marginLeft: sizes[6],\n                },\n                [mq[0]]: {\n                    marginLeft: sizes[8],\n                },\n                },\n            }}\n        >\n        <div>\n        <i>{icon}</i>\n        </div>\n        <div>\n        <div className=\"SkillStackItemContent\">\n            {icon ? <h2>{title}</h2> : <h1>{title}</h1>}\n        <p>{children}</p>\n        </div>\n        </div>\n        </div>\n    );\n};\n\nexport const StyledCard = styled(Card)`\n    div {\n        top: 0;\n        align-items: center;\n        svg {\n            width: 5rem;\n            height: 7rem;\n        }\n        h1 {\n            position: relative;\n            top: 0;\n            left: 1rem;\n        }\n    }\n`;\nexport default StyledCard;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport Card from './card';\nimport Emoji from '../../atoms';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <ul>\n      <li parentName=\"ul\"><Card id='python' mdxType=\"Card\">\n  <p><span>✏️ </span><a>2年くらい</a></p>\n  大学生になって触れた、というか人生で一番最初に触ったプログラミング言語です。\n  一番最初に触れているので愛着があります。<br />\n  インターンではElasticsearchのAPIを叩いてデータのBulk Insertとか検索を実装しました。\n  FlaskとかDjangoとかのフレームワークも少しできます。\n        </Card></li>\n      <li parentName=\"ul\"><Card id='elasticsearch' mdxType=\"Card\">\n          <p><span>✏️ </span><a>5 ヶ月くらい</a></p>\n  インターンで使用しました。\n  とても使いやすい全文検索エンジンで、形態素解析なども簡単に実装できてとてもよいと思います。<br />\n  インターンではKuromojiを利用した形態素解析やユーザー辞書を組み合わせた検索ロジックを作りました。\n  ユニークなスキルだと思うので、これからも勉強していきたいです。\n        </Card></li>\n      <li parentName=\"ul\"><Card id='react' mdxType=\"Card\">\n  <p><span>✏️ </span><a>1 ヶ月くらい</a></p>\n  このポートフォリオサイトを作成するために勉強しました。<br />というか勉強中です。\n  どうもフロント側の技術の理解が甘いのでまだ手探り状態です。\n  もっと良いサイトを作ることができるようになりたいです。  \n        </Card></li>\n      <li parentName=\"ul\"><Card id='rust' mdxType=\"Card\">\n  <p><span>✏️ </span><a>3 ヶ月くらい</a></p>\n  現在鋭意勉強中です。<br />\n  「Rustってなんか新しいし、かっこよくね？」みたいな安易な考えで勉強し始めました。\n  将来はゲームエンジンとか作ってみたいです。\n        </Card></li>\n      <li parentName=\"ul\"><Card id='docker' mdxType=\"Card\">\n  <p><span>✏️ </span><a>5 ヶ月くらい</a></p>\n  個人でいろいろ使用していましたが、本格的に使用したのはインターンからです。\n  インターンではDocker-composeを使用してました。<br />\n  docker-compose upだけでバックとフロントの環境が立ち上がるのはすごいですね(小並感)\n        </Card></li>\n      <li parentName=\"ul\"><Card id='cpp' mdxType=\"Card\">\n  <p><span>✏️ </span><a>4 ヶ月くらい</a></p>\n  学校の授業で触れました。授業ではぷよぷよもどきみたいなものを作りました。\n  少し苦手感はありますが、競プロをちょくちょくC++でやっていたりします。\n        </Card></li>\n      <li parentName=\"ul\"><Card id='r' mdxType=\"Card\">\n  <p><span>✏️ </span><a>5 ヶ月くらい</a></p>\n  授業で使用しました。\n  基本的な統計処理は一通りできます。\n        </Card></li>\n      <li parentName=\"ul\"><Card id='ruby' mdxType=\"Card\">\n <p><span>✏️ </span><a>4 ヶ月くらい</a></p>\n  大学の授業で使用しました。 現在はあまり触っていませんが、経験があるので使う気になれば多分すぐ使えるようになると思います。\n        </Card></li>\n      <li parentName=\"ul\"><Card id='aws' mdxType=\"Card\">\n  <p><span>✏️ </span><a>2 ヶ月くらい</a></p>\n  インターンでECSとECRを使ってデプロイをしました。\n  結構難しくて、なかなか実装ができませんでした。\n        </Card></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react';\n\nimport styled from '@emotion/styled';\n\nimport SkillsMDX from './skills.mdx';\nimport { Emoji } from '../../atoms'\n\nconst SkillCards: React.FCX = ({ className }) => (\n    <section className={className}>\n        <SkillsMDX />\n    </section>\n);\n\nexport const StyledSkillCards = styled(SkillCards)`\n    ul {\n        display: grid;\n        grid-template-columns: repeat(2, 1fr);\n        grid-gap: 8rem;\n        padding: 0rem 0;\n        width: 100%;\n\n        li {\n        display: fix;\n        padding: 1rem 0;\n        }\n\n        @media screen and (max-width: 768px) {\n        li {\n            padding: 0.75rem 0;\n        }\n        }\n\n        @media screen and (max-width: 480px) {\n        grid-template-columns: repeat(1, 1fr);\n        li {\n            padding: 0.5rem 0;\n        }\n        }\n    }\n`;\n\nexport default StyledSkillCards;","import React from 'react';\n\nimport styled from '@emotion/styled';\n\nimport { SEO } from '../components';\nimport { StyledSkillCards as SkillCards } from '../components/molecules/Skills/skill-cards';\nimport baseStyle from '../styles/base-style';\n\nimport { css } from '@emotion/core';\nimport { sizes, mq, colors } from '../theme';\n\nimport {\n    Title,\n    Emoji\n} from '../components/atoms';\n\nconst Skills: React.FCX = ({ className }) => (\n    <main className={className}>\n        <Title color={colors.black}>\n            <Emoji symbol=\"🤹 \" />\n                SKILLS</Title>\n        <SkillCards />\n    </main>\n);\n\nconst StyledSkills = styled(Skills)`\n    ${baseStyle};\n`;\n\nexport default  ({ path }: { path: string }): JSX.Element => (\n    <>\n        <SEO title='Skills' pathname={path}/>\n        <StyledSkills />\n    </>\n);\n"],"sourceRoot":""}